import type { Expression } from '../../sequelize.js';
import { AbstractQueryGenerator } from '../abstract/query-generator';
import type { EscapeOptions, RemoveIndexQueryOptions, TableNameOrModel } from '../abstract/query-generator-typescript';
import type { AddLimitOffsetOptions, CreateDatabaseQueryOptions, ListDatabasesQueryOptions, ListSchemasQueryOptions, ListTablesQueryOptions, RenameTableQueryOptions, ShowConstraintsQueryOptions } from '../abstract/query-generator.types';
/**
 * Temporary class to ease the TypeScript migration
 */
export declare class PostgresQueryGeneratorTypeScript extends AbstractQueryGenerator {
    protected _getTechnicalDatabaseNames(): string[];
    protected _getTechnicalSchemaNames(): string[];
    listDatabasesQuery(options?: ListDatabasesQueryOptions): string;
    createDatabaseQuery(database: string, options?: CreateDatabaseQueryOptions): string;
    listSchemasQuery(options?: ListSchemasQueryOptions): string;
    describeTableQuery(tableName: TableNameOrModel): string;
    listTablesQuery(options?: ListTablesQueryOptions): string;
    renameTableQuery(beforeTableName: TableNameOrModel, afterTableName: TableNameOrModel, options?: RenameTableQueryOptions): string;
    showConstraintsQuery(tableName: TableNameOrModel, options?: ShowConstraintsQueryOptions): string;
    showIndexesQuery(tableName: TableNameOrModel): string;
    removeIndexQuery(tableName: TableNameOrModel, indexNameOrAttributes: string | string[], options?: RemoveIndexQueryOptions): string;
    jsonPathExtractionQuery(sqlExpression: string, path: ReadonlyArray<number | string>, unquote: boolean): string;
    formatUnquoteJson(arg: Expression, options?: EscapeOptions): string;
    versionQuery(): string;
    protected _addLimitAndOffset(options: AddLimitOffsetOptions): string;
}
